# train ae or vae
#### a template for pcd encoder
mode: train
model:
  # can be AE, VAE, SeM and DDPM
  name: VAE
  # encoder config
  encoder:
    name: PointNet2
    in_channel: 3
    point_num: 2048
    building_block: dense
    num_neighbors_k: 32
    num_fps_points: [1024, 512, 256, 128]
    fps_feature_channels: [128, 256, 512, 1024]
    neighbor_radius: [0.1, 0.2, 0.4, 0.8]
    dense_channels: [1024]
    activation: relu
    normalization: batch
    vector_embedding: true
  decoder:
    name: PointNet
    dense_channels: [512, 256]
    # folding_times: 2
  reconstruction_losses: 
    - name: DCD
      alpha: 40
      n_lambda: 0.5

  distribution_loss:
    name: KL
    weight: 0.0001
loader:
  dataset: 
    name: PcdDataset
    data_dir: left
    data_suffix: ply
  data_path_list: 
    - /media/wlsdzyzl/DATA1/datasets/pcd/imageCAS/lrply/surface/
  batch_size: 16
  num_workers: 8
  shuffle: true
  data_transforms:
    - name: Normalize
    - name: FixedPoints
      num: 2048
    - name: ToTensor
      dtype: float
check_point_dir: /media/wlsdzyzl/DATA1/flemme-ckp/imagecas/PointNet2_VAE_KL1eN4_DCD
### parameter for optimizer
optimizer:
  name: Adam
  lr: 0.0001
  weight_decay: 0.00000001
### scheduler for learning rate
lr_scheduler: 
  name: LinearLR
  start_factor: 1.0
  end_factor: 0.01
sampler:
  name: NormalSampler
max_epoch: 500
write_after_iters: 20
save_after_epochs: 10