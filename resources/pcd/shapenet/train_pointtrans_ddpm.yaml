# train ae or vae
#### a template for pcd encoder
mode: train
model:
  # can be AE, VAE, SeM and DDPM
  name: DDIM
  num_steps: 1000
  sample_num_steps: 100
  beta_schedule: consine
  parameterization: velocity
  eps_model:
    time_channel: 128
    encoder:
      name: PointTrans
      in_channel: 3
      point_num: 256
      building_block: pct_oa
      # num_neighbors_k: 20
      local_feature_channels: [128, 256, 512, 1024]
      voxel_resolutions: [32, 32, 16, 16]
      dense_channels: [1024]
      activation: lrelu
      normalization: layer
      channel_attention: eca
      vector_embedding: false
      # time_injection: cross_attention
    decoder:
      name: PointNet
      dense_channels: [512, 256, 128]
  eps_loss:
    name: MSE
loader:
  dataset: 
    name: PcdDataset
    data_dir: skeleton
    data_suffix: ply
  data_path_list: 
    - /media/wlsdzyzl/DATA1/vcg-results/skeleton/shapenet/chair/sknet/
  batch_size: 12
  num_workers: 8
  shuffle: true
  data_transforms:
    - name: ToTensor
check_point_dir: /media/wlsdzyzl/DATA1/flemme-ckp/shapenet/chair/skdpm-pvtrans-new/
resume: true
### parameter for optimizer
optimizer:
  name: Adam
  lr: 0.0001
  weight_decay: 0.00000001
### scheduler for learning rate
lr_scheduler: 
  name: LinearLR
  start_factor: 1.0
  end_factor: 0.01
sampler:
  name: NormalSampler
max_epoch: 2000
write_after_iters: 20
write_sample_num: 4
save_after_epochs: 10